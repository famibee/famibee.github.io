;*********************************************************
;@EXT_DESC	概要：立ち絵の扱いが簡単な[fg]
;@VER		2017.8.17.002	立ち絵は最大10個まで、を明記
;		あずかり知らぬところで[clear_lay]などされた際にも対応。
;		alpha、ease指定に対応、表示済み立ち絵と入れ替える機能
;@VER		2017.7.19.001	[fg2 del=]でruleなどが効くように
;@VER		2017.7.19.000	[fg]定義は削除、[fg2_squat][fg2_shake][fg2_sidestep]追加
;@VER		2015.6.15.000
;*********************************************************

;*********************************************************
;	定数
; 立ち絵表示範囲の右端と左端
&save:an.fg2.xb = 0
&save:an.fg2.xe = const.flash.display.Stage.stageWidth
&save:an.fg2.max_lay = 3	; 最大レイヤ数（以下で自動調査）

	[add_lay layer=0 class=grp cond=!const.an.lay.0]
	[add_lay layer=1 class=grp cond=!const.an.lay.1]
	[add_lay layer=2 class=grp cond=!const.an.lay.2]
*max_lay_lp
[if exp='const.an.lay[save:an.fg2.max_lay]']
	&save:an.fg2.max_lay = save:an.fg2.max_lay + 1
	[jump label=*max_lay_lp]
[endif]


;*********************************************************
; 以降はノータッチで
	[loadplugin fn=plgTweensy join=true cond="!const.an.plg.plgTweensy && !const.an.plg.plgBetweenAS3"]

;*********************************************************
&save:an.fg2.lays = ''
[macro name="fg2"]
	; ここまでで[clear_lay]などされてるレイヤ情報を削除
;[trace text="&'max_lay='+ save:an.fg2.max_lay +' lays:'+ save:an.fg2.lays@str +':'"]
	[for_call name=l from=0 to=&save:an.fg2.max_lay-1 label=*fg2_gc]
;[trace text="&'lays:'+ save:an.fg2.lays@str +':'"]

	[if exp='mp:del']
		&lay = save:an.fg2.hu[mp:del]
		&&'save:an.fg2.hu.'+ mp:del = null
		&&'save:an.fg2.hu.'+ mp:del +'.pos' = null
		&save:an.fg2.l2hu[lay] = null
		[let_replace name=save:an.fg2.lays text=&save:an.fg2.lays@str val='' reg=&lay cast=str]
;[trace text="&'== del lays:'+ save:an.fg2.lays@str +': lay:'+ lay"]
		[fg layer=&lay *]
		[break_macro]
	[endif]

	[let_replace name=h text=%fn val='' reg='_.+' cast=str]
	[if exp='mp:swap']
		&lay = save:an.fg2.hu[mp:swap]
;[trace text='&"sw 0 lay:"+ lay +" h:"+ h +" swap:"+ mp:swap']
		[if exp='lay == null']
		; エラーとすべきなのか迷う。黙って通常処理でもいいのかも
			[trace text="&'swap属性に指定した人物キー【'+ lay +'】は存在しません。属性swap不要かも'"]
			[break_macro]
		[endif]

		&old_h = save:an.fg2.l2hu[lay]
		&&'save:an.fg2.hu.'+ old_h = null
		&&'save:an.fg2.hu.'+ h = lay
		&&'save:an.fg2.l2hu.'+ lay = h
	;	&save:an.fg2.hu[lay].pos = 00	; 同じレイヤを使うので触らず
;[trace text='&"sw 1 l2hu:"+ save:an.fg2.l2hu[lay] +" hu:"+ save:an.fg2.hu[h] +" pos:"+ save:an.fg2.hu[lay].pos']
	[endif]

	&mylay = save:an.fg2.hu[h]
;[trace text="&'== chg hu:'+ h +' lay:'+ mylay +' v:'+ const.an.lay[mylay].fore.visible +' w:'+ const.an.lay[mylay].fore.width"]
	[if exp='mylay != null && const.an.lay[mylay].fore.visible && const.an.lay[mylay].fore.width > 0']
		[fg layer=&mylay pos='&save:an.fg2.hu[mylay].pos' *]
		[break_macro]
	[endif]

	[let name=alpha text=%alpha|1]
	[let name=time text=%time|500]
	[let name=time text=0 cond=an.skip.enabled]	; skip時は処理なし
	[let name=ease text=%ease|Cubic.easeOutbic]
	[let name=add text=%add|'cr']

	&use_lay = null
	[for_call name=l from=0 to=&save:an.fg2.max_lay-1 label=*fg2_add]
;[trace text="&'lays:'+ save:an.fg2.lays@str +': use_lay:'+ use_lay +' add:'+ add"]
	[if exp='use_lay == null']
		[trace text="&'最大レイヤ数'+ save:an.fg2.max_lay +'を越えました。これ以上同時に立ち絵を表示したい場合、レイヤを増やして下さい'"]
		[break_macro]
	[endif]

	&&'save:an.fg2.hu.'+ h = use_lay	; name→lay
	&&'save:an.fg2.l2hu.'+ use_lay = h	; lay→name
;[trace text="&'-- hu:'+ h +' lay:'+ save:an.fg2.hu[h] +' use_lay:'+ use_lay +' hlh:'+ save:an.fg2.l2hu[use_lay]"]

; 移動＆フェードイン
	[let_length name=cnt text=&save:an.fg2.lays@str]
	&wh = (save:an.fg2.xe - save:an.fg2.xb)/cnt/2
;[trace text="&'== mov&fi cnt:'+ cnt +' wh:'+ wh +' lays:'+ save:an.fg2.lays@str +':'"]
	[for_call name=l from=0 to=&cnt-1 label=*fg2_dsp]
	[for_call name=l from=0 to=&cnt-1 label=*fg2_dspw]
[endmacro]

;*********************************************************
; 立ち絵を屈伸させる
[macro name="fg2_squat"]
	[let_replace name=h text=%name val='' reg='_.+' cast=str]
	&lay=save:an.fg2.hu[h]
	[fg_squat * layer=&lay cond='lay != null']
[endmacro]

;*********************************************************
; 立ち絵を震わせる
[macro name="fg2_shake"]
	[let_replace name=h text=%name val='' reg='_.+' cast=str]
	&lay=save:an.fg2.hu[h]
	[fg_shake * layer=&lay cond='lay != null']
[endmacro]

;*********************************************************
; 立ち絵を反復横跳びさせる（楽しそう）
[macro name="fg2_sidestep"]
	[let_replace name=h text=%name val='' reg='_.+' cast=str]
	&lay=save:an.fg2.hu[h]
	[fg_sidestep * layer=&lay cond='lay != null']
[endmacro]


[return]


;*********************************************************
*fg2_gc
	[let_index_of name=i text=&save:an.fg2.lays@str val=&for_call_idx.l]
	[return cond='i == -1']	; 未使用なら対象外

	&lay = for_call_idx.l
	&hu = save:an.fg2.l2hu[lay]
;[trace text="&' ***fg2_gc lay='+ lay +' hu:'+ hu +' v:'+ const.an.lay[lay].fore.visible +' a:'+ const.an.lay[lay].fore.alpha +' w:'+ const.an.lay[lay].fore.width"]
	[return cond='const.an.lay[lay].fore.visible && const.an.lay[lay].fore.alpha > 0 && const.an.lay[lay].fore.width > 0']	; 正常
;[trace text="&' *fg2_gc lay='+ lay +' hu:'+ hu +' w:'+ const.an.lay[lay].fore.width"]

	; 辞書から削除。レイヤは触らない方針
	&save:an.fg2.l2hu[lay] = null
	&&'save:an.fg2.hu.'+ hu = null
	&&'save:an.fg2.hu.'+ hu +'.pos' = null
	[let_replace name=save:an.fg2.lays text=&save:an.fg2.lays@str val='' reg=&lay cast=str]
;[trace text="&' **exit** save:an.fg2.lays:'+ save:an.fg2.lays +':'"]
[return]
;*********************************************************
*fg2_add
	[let_index_of name=i text=&save:an.fg2.lays@str val=&for_call_idx.l]
	[return cond='i != -1']

	&use_lay = for_call_idx.l	; セットするのもここの役目
	[if exp="add == 'l'"]
		&save:an.fg2.lays = use_lay@str + save:an.fg2.lays@str = str
	[elsif exp="add == 'r'"]
		&save:an.fg2.lays = save:an.fg2.lays@str + use_lay@str = str
	[else]
		[let_length name=len text=&save:an.fg2.lays@str]
		[if exp="len % 2 == 0"]
			&bl = len/2 = uint
		[elsif exp="add == 'cl'"]
			&bl = (len-1)/2 = uint
		[else]
			&bl = (len-1)/2+1 = uint
		[endif]
		[let_substr name=b text=&save:an.fg2.lays@str pos=0 len=&bl cast=str]
		[let_substr name=i text=&save:an.fg2.lays@str pos=&bl len=all cast=str]
		&save:an.fg2.lays = b@str + use_lay@str + i@str = str
	[endif]
[for_call_break]
[return]
;*********************************************************
*fg2_dsp
	&l = for_call_idx.l
	[let_char_at name=lay text=&save:an.fg2.lays@str pos=&l]
;[trace text="&'---- lay:'+ lay +' lays:'+ save:an.fg2.lays@str + ': l:'+ l +' v:'+ const.an.lay[lay].fore.visible +' a:'+ const.an.lay[lay].fore.alpha +' w:'+ const.an.lay[lay].fore.width"]
	&x = save:an.fg2.xb +wh +wh*2*l = int
	&&'save:an.fg2.hu.'+ lay +'.pos' = x
	[if exp='const.an.lay[lay].fore.visible && const.an.lay[lay].fore.alpha > 0  && const.an.lay[lay].fore.width > 0']
;[trace text="&'== v:t lay:'+ lay +' tsy:'"]
		[tsy layer=&lay time=&time x='&x -const.an.lay[lay].fore.width/2' ease=&ease]
	[else]
;[trace text="&'== v:f lay:'+ lay +' fg:'"]
		[lay layer=&lay pos=&x fn=&mp:fn face=&mp:face alpha=0 visible=true]
			; マクロ直下ではないので、%や*や|が使えない
		[tsy layer=&lay time=&time alpha=&alpha]
	[endif]
[return]
;*********************************************************
*fg2_dspw
	[let_char_at name=lay text=&save:an.fg2.lays@str pos=&for_call_idx.l]
	[wait_tsy layer=&lay]
[return]
